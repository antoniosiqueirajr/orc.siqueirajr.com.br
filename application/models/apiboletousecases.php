<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class apiboletousecases extends B10_Model{        private $token;        public function __construct(){        parent::__construct();        $this->load->model('benepop');        $this->load->library('api_boleto');    }        public function buscarFrancesinha($param = array()){        $this->load->model('benepop');        $this->load->model('parametro');        $this->load->library('api_boleto');        $this->token = $this->api_boleto->getToken()->access_token;        $retorno = '';        foreach($this->benepop->get_unidades() as $unidade){            if($unidade->itau_id_beneficiario == '' || $unidade->id_unidade == '1000') continue;            $data_inicial = soma_dias_uteis(date('Y-m-d'), ($param['dias_a_consultar'] ?? 1), array(1,2,3,4,5), array(), '-');            $data_final = soma_dias_uteis(date('Y-m-d'), ($param['dias_a_consultar'] ?? 1), array(1,2,3,4,5), array(), '-');            //$data_final = soma_dias_uteis(date('Y-m-d'), 1, array(1,2,3,4,5), array(), '-');            while(strtotime($data_inicial) <= strtotime($data_final)){                $data_movimentacao = $data_inicial;                $retorno_api = $this->api_boleto->francesinha($unidade->itau_id_beneficiario, $data_movimentacao, $this->token);                if(property_exists($retorno_api, 'data')){                    $retorno .= $this->processarRetornoFrancecinha($retorno_api,$unidade);                }                $data_inicial = soma_dias_uteis($data_inicial, 1, array(0,1,2,3,4,5,6),array());            }        }        return $retorno;    }        public function processarRetornoFrancecinha($retornos_francecinha, $unidade){        $retorno = '';        foreach($retornos_francecinha->data as $x=>$retorno_api){            $boleto = $this->benepop->get_boleto($unidade->id_unidade, substr($retorno_api->nosso_numero,-7));            if(!is_object($boleto)){                $retorno .= $unidade->id_unidade.' - '.substr($retorno_api->nosso_numero,-7).' não encontrado<br>';                continue;            }            if(in_array($boleto->remessa_gerada, array(/*'C','B',*/'L'))){ continue; }            $retorno .= $this->consultarBoleto($boleto,$unidade->itau_id_beneficiario, $boleto->carteira, $retorno_api->nosso_numero);        }        return $retorno;    }    public function consultarBoleto($boleto,$id_beneficiario, $codigo_carteira, $nosso_numero){        $retorno_api = $this->api_boleto->consultar($id_beneficiario, $codigo_carteira, $nosso_numero, $this->token);        $dados_boleto = $retorno_api->data[0];        $situacao_geral_boleto = $dados_boleto->dado_boleto->dados_individuais_boleto[0]->situacao_geral_boleto;        echo "$id_beneficiario - $nosso_numero: $situacao_geral_boleto<br>";        $retorno = '';        switch ($situacao_geral_boleto) {            case 'Baixada':                if($boleto->remessa_gerada != 'B' && $boleto->remessa_gerada != 'C'){                    $retorno .= "$id_beneficiario - $nosso_numero: $situacao_geral_boleto<br>";                    $this->benepop->baixar_boleto($boleto,$dados_boleto);                }                break;            case 'Paga':                if($boleto->remessa_gerada != 'L'){                    $retorno .= "$id_beneficiario - $nosso_numero: $situacao_geral_boleto<br>";                    $this->benepop->liquidar_boleto($boleto,$dados_boleto);                }                break;            case 'Aguardando Confirmação de Pagamento':                $retorno .= "$id_beneficiario - $nosso_numero: $situacao_geral_boleto<br>";                $this->benepop->provisionar_pagamento_boleto($boleto,$dados_boleto);                break;            default:                $retorno .= "$id_beneficiario - $nosso_numero: $situacao_geral_boleto<br>";                $this->benepop->atualizar_boleto($boleto,$dados_boleto);                break;        }        return $retorno;    }}